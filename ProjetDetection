import pandas as pd
import numpy as np
import pandas_profiling as pp

import matplotlib
from matplotlib import pyplot as plt

from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.naive_bayes import GaussianNB
from sklearn.metrics import classification_report
from sklearn.ensemble import RandomForestRegressor
from sklearn.tree import DecisionTreeClassifier

import seaborn as sns
sns.set

from pandas_profiling import ProfileReport


# IMPORT DATASET

Friday_02_03_2018 = pd.read_csv('C:/Users/Charles-Alexandre/Desktop/ProjetIA/Friday-02-03-2018TrafficForML_CICFlowMeter.csv')
Friday_23_03_2018 = pd.read_csv('C:/Users/Charles-Alexandre/Desktop/ProjetIA/Friday-23-02-2018_TrafficForML_CICFlowMeter.csv')

Thursday_15_02_2018 = pd.read_csv('C:/Users/Charles-Alexandre/Desktop/ProjetIA/Thursday-15-02-2018_TrafficForML_CICFlowMeter.csv')
Thursday_22_02_2018 = pd.read_csv('C:/Users/Charles-Alexandre/Desktop/ProjetIA/Thursday-22-02-2018_TrafficForML_CICFlowMeter.csv')

Wednesday_14_02_2018 = pd.read_csv('C:/Users/Charles-Alexandre/Desktop/ProjetIA/Wednesday-14-02-2018_TrafficForML_CICFlowMeter.csv')
Wednesday_21_02_2018 = pd.read_csv('C:/Users/Charles-Alexandre/Desktop/ProjetIA/Wednesday-21-02-2018_TrafficForML_CICFlowMeter.csv')



# EQUILIBRAGE DATASET

Friday_02_03_2018_Egalisé = AttackAndBenign(Friday_02_03_2018)
Friday_02_03_2018_Egalisé = Friday_02_03_2018_Egalisé.drop(['index'],axis = 1)
Friday_02_03_2018_Egalisé.to_csv(r'C:\Users\Charles-Alexandre\Desktop\ProjetIA\DETECTION_INTRUSION_DANS_UN_RESEAU\DatasetsEquilibré\Friday_02_03_2018_Egalisé',index = False)

Friday_23_03_2018_Egalisé = AttackAndBenign(Friday_23_03_2018)
Friday_23_03_2018_Egalisé = Friday_23_03_2018_Egalisé.drop(['index'],axis = 1)
Friday_23_03_2018_Egalisé.to_csv(r'C:\Users\Charles-Alexandre\Desktop\ProjetIA\DETECTION_INTRUSION_DANS_UN_RESEAU\DatasetsEquilibré\Friday_23_03_2018_Egalisé',index = False)


Thursday_15_02_2018_Egalisé = AttackAndBenign(Thursday_15_02_2018)
Thursday_15_02_2018_Egalisé = Thursday_15_02_2018_Egalisé.drop(['index'],axis = 1)
Thursday_15_02_2018_Egalisé.to_csv(r'C:\Users\Charles-Alexandre\Desktop\ProjetIA\DETECTION_INTRUSION_DANS_UN_RESEAU\DatasetsEquilibré\Thursday_15_02_2018_Egalisé',index = False)

Thursday_22_02_2018_Egalisé = AttackAndBenign(Thursday_22_02_2018)
Thursday_22_02_2018_Egalisé = Thursday_22_02_2018_Egalisé.drop(['index'],axis = 1)
Thursday_22_02_2018_Egalisé.to_csv(r'C:\Users\Charles-Alexandre\Desktop\ProjetIA\DETECTION_INTRUSION_DANS_UN_RESEAU\DatasetsEquilibré\Thursday_22_02_2018_Egalisé',index = False)


Wednesday_14_02_2018_Egalisé = AttackAndBenign(Wednesday_14_02_2018)
Wednesday_14_02_2018_Egalisé = Wednesday_14_02_2018_Egalisé.drop(['index'],axis = 1)
Wednesday_14_02_2018_Egalisé.to_csv(r'C:\Users\Charles-Alexandre\Desktop\ProjetIA\DETECTION_INTRUSION_DANS_UN_RESEAU\DatasetsEquilibré\Wednesday_14_02_2018_Egalisé',index = False)

Wednesday_21_02_2018_Egalisé = AttackAndBenign(Wednesday_21_02_2018)
Wednesday_21_02_2018_Egalisé = Wednesday_21_02_2018_Egalisé.drop(['index'],axis = 1)
Wednesday_21_02_2018_Egalisé.to_csv(r'C:\Users\Charles-Alexandre\Desktop\ProjetIA\DETECTION_INTRUSION_DANS_UN_RESEAU\DatasetsEquilibré\Wednesday_21_02_2018_Egalisé',index = False)

# ADDING INTRUSION AND DELETING NULL COLUMNS

rajouter_colonne_intrusion(Friday_02_03_2018_Egalisé)
remove_columns(Friday_02_03_2018_Egalisé)  
Friday_02_03_2018_Egalisé.to_csv(r'C:\Users\Charles-Alexandre\Desktop\ProjetIA\DETECTION_INTRUSION_DANS_UN_RESEAU\DatasetAvecIntrusionEtSansColonneNull\Friday_02_03_2018_Egalisé_intrusion_SansNull',index = False)

rajouter_colonne_intrusion(Friday_23_03_2018_Egalisé)
remove_columns(Friday_23_03_2018_Egalisé)  
Friday_23_03_2018_Egalisé.to_csv(r'C:\Users\Charles-Alexandre\Desktop\ProjetIA\DETECTION_INTRUSION_DANS_UN_RESEAU\DatasetAvecIntrusionEtSansColonneNull\Friday_23_03_2018_Egalisé_intrusion_SansNull',index = False)

rajouter_colonne_intrusion(Thursday_15_02_2018_Egalisé)
remove_columns(Thursday_15_02_2018_Egalisé)    
Thursday_15_02_2018_Egalisé.to_csv(r'C:\Users\Charles-Alexandre\Desktop\ProjetIA\DETECTION_INTRUSION_DANS_UN_RESEAU\DatasetAvecIntrusionEtSansColonneNull\Thursday_15_02_2018_Egalisé_intrusion_SansNull',index = False)

rajouter_colonne_intrusion(Thursday_22_02_2018_Egalisé)
remove_columns(Thursday_22_02_2018_Egalisé) 
Thursday_22_02_2018_Egalisé.to_csv(r'C:\Users\Charles-Alexandre\Desktop\ProjetIA\DETECTION_INTRUSION_DANS_UN_RESEAU\DatasetAvecIntrusionEtSansColonneNull\Thursday_22_02_2018_Egalisé_intrusion_SansNull',index = False)

rajouter_colonne_intrusion(Wednesday_14_02_2018_Egalisé)
remove_columns(Wednesday_14_02_2018_Egalisé)  
Wednesday_14_02_2018_Egalisé.to_csv(r'C:\Users\Charles-Alexandre\Desktop\ProjetIA\DETECTION_INTRUSION_DANS_UN_RESEAU\DatasetAvecIntrusionEtSansColonneNull\Wednesday_14_02_2018_Egalisé_intrusion_SansNull',index = False)

rajouter_colonne_intrusion(Wednesday_21_02_2018_Egalisé)
remove_columns(Wednesday_21_02_2018_Egalisé) 
Wednesday_21_02_2018_Egalisé.to_csv(r'C:\Users\Charles-Alexandre\Desktop\ProjetIA\DETECTION_INTRUSION_DANS_UN_RESEAU\DatasetAvecIntrusionEtSansColonneNull\Wednesday_21_02_2018_Egalisé_intrusion_SansNull',index = False)


# CONCATENATION ALL DATASETS WITH EQUALIZED WITH INTRUSION AND WITHOUT NULL ELEMENTS


dataset = pd.concat([Friday_02_03_2018_Egalisé,Friday_23_03_2018_Egalisé,Thursday_15_02_2018_Egalisé,Thursday_22_02_2018_Egalisé,Wednesday_14_02_2018_Egalisé,Wednesday_21_02_2018_Egalisé])
dataset = dataset.reset_index(drop = True)
dataset.to_csv(r'C:\Users\Charles-Alexandre\Desktop\ProjetIA\DETECTION_INTRUSION_DANS_UN_RESEAU\TotalDatasetAvecIntrusionEtSansColonneNull\total_dataset_Equalized_intrusion_SinNull',index = False)

# DATASET CLEANING

dataset_cleaned = nettoyage(dataset)
dataset_cleaned.to_csv(r'C:\Users\Charles-Alexandre\Desktop\ProjetIA\DETECTION_INTRUSION_DANS_UN_RESEAU\T_D_A_I_S_C_N_Nettoye\dataset_total_nettoyé',index = False)

# DATASET CLEANED AND NORMALIZED
#dataset_cleaned_and_normalized = NormalizeAndClean(dataset)
#dataset_cleaned_and_normalized.to_csv(r'C:\Users\Charles-Alexandre\Desktop\ProjetIA\DETECTION_INTRUSION_DANS_UN_RESEAU\T_D_A_I_S_C_N_Nettoye_Normalise\dataset_total_nettoyé_normalisé',index = False)

## FEATURES IMPORTANCES

dataset_cleaned_important_features = pd.read_csv('C:/Users/Charles-Alexandre/Desktop/ProjetIA/DETECTION_INTRUSION_DANS_UN_RESEAU/T_D_A_I_S_C_N_Nettoye/dataset_total_nettoyé')

dataset_cleaned_important_features['Timestamp'] = pd.to_datetime(dataset_cleaned_important_features['Timestamp'])
dataset_cleaned_important_features = dataset_cleaned_important_features.drop(['Timestamp','Label'], axis = 1)

dataset_cleaned_important_features.astype(np.float32)


X = dataset_cleaned_important_features.drop(['Intrusion','Flow Byts/s', 'Flow Pkts/s'], axis = 1)
X.astype(np.float32)
y = dataset_cleaned_important_features['Intrusion'] 

np.nan_to_num(X)

for colonne in X.columns:
    a = np.array((X[colonne]))
    X[colonne] = np.around(a, decimals=5)
    
    
 X_train, X_test, y_train, y_test = train_test_split(X, y, 
                        test_size=0.2, random_state=2)

 
rf = RandomForestRegressor(n_estimators = 25)
rf.fit(X_train, y_train)


importances1 = pd.Series(index=X.columns[:20],
                        data=rf.feature_importances_[:20])
importances_sorted1 = importances1.sort_values()
importances_sorted1.plot(kind='barh', color='red', title='1')
plt.show()

 

importances2 = pd.Series(index=X.columns[20:40],
                        data=rf.feature_importances_[20:40])
importances_sorted2 = importances2.sort_values()
importances_sorted2.plot(kind='barh', color='red', title='2')
plt.show()

 

importances3 = pd.Series(index=X.columns[40:],
                        data=rf.feature_importances_[40:])
importances_sorted3 = importances3.sort_values()
importances_sorted3.plot(kind='barh', color='red', title='3')
plt.show()

 

'''
np.where(df.values >= np.finfo(np.float32).max)
X = df.drop(['Intrusion', 'Unnamed: 0'], axis = 1
np.nan_to_num(X)
'''
Fwd IAT Min, Bwd IAT Tot, Fwd IAT Std


# NEW DATASET CLEANED EQUALIZED SIN NULL ELEMENTS AND REDUCED


dataset_cleaned_important_features = pd.read_csv('C:/Users/Charles-Alexandre/Desktop/ProjetIA/DETECTION_INTRUSION_DANS_UN_RESEAU/T_D_A_I_S_C_N_Nettoye/dataset_total_nettoyé')

important_features = ['Dst Port','Flow IAT Min','Flow IAT Max',
                    'Fwd Pkt Len Mean', 'Tot Fwd Pkts', 'TotLen Fwd Pkts','Bwd Pkt Len Std',
                    'Fwd Pkt Len Max','Fwd Pkts/s', 'Pkt Len Mean',
                     'Pkt Len Var','Pkt Len Std','Pkt Len Max',
                    'Fwd Header Len','Bwd IAT Min','Fwd IAT Mean','Fwd IAT Min', 'Bwd IAT Tot', 'Fwd IAT Std',
                     'Init Bwd Win Byts','Init Fwd Win Byts', 'Fwd Seg Size Min','Fwd Seg Size Avg','Fwd Act Data Pkts','Down/Up Ratio','Subflow Fwd Pkts','Pkt Size Avg','Intrusion','Label']
                     
                     
 for colonne in dataset_cleaned_important_features.columns:
    if colonne not in important_features : 
        del dataset_cleaned_important_features[colonne]  
        
        
        
 dataset_cleaned_important_features
 
 
 dataset_cleaned_important_features.to_csv(r'C:\Users\Charles-Alexandre\Desktop\ProjetIA\DETECTION_INTRUSION_DANS_UN_RESEAU\T_D_A_I_S_C_N_Nettoye_Reduite\Dataset_nettoye_reduite',index = False)
 
 ## NEW DATASET CLEANED EQUALIZED SIN NULL ELEMENTS AND REDUCED + CORRELE
 
 
 
 dataset_cleaned_important_features = pd.read_csv('C:/Users/Charles-Alexandre/Desktop/ProjetIA/DETECTION_INTRUSION_DANS_UN_RESEAU/T_D_A_I_S_C_N_Nettoye_Reduite/Dataset_nettoye_reduite')
 
 dataset_cleaned_important_features['Label'].value_counts()
 
 
plt.figure(figsize=(20,20))
sns.heatmap(dataset_cleaned_important_features.corr())
sns.heatmap(dataset_cleaned_important_features.corr(),annot=True)



 
 
    
